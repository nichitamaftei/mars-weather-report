# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI pipeline

on:
  push:
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  linting-unit:
    runs-on: ubuntu-latest
  
    permissions:
      checks: write
  
    steps:
    - uses: actions/checkout@v4
  
    - name: Build Docker image
      run: docker build -t mars-weather-report .
  
    - name: Lint inside container
      run: docker run --rm mars-weather-report flake8 . --exit-zero
  
    - name: Run unit tests inside container and generate JUnit report
      run: |
        mkdir -p reports
        docker run --rm -v ${{ github.workspace }}/reports:/app/reports mars-weather-report pytest tests/unit --junitxml=/app/reports/test-results.xml
  
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v5
      if: success() || failure()
      with:
        report_paths: 'reports/test-results.xml'

  integration:
    # os of the runner
    runs-on: ubuntu-latest
    # sets the api key into the enviroment from this repo's secrets
    env:
      NASA_API_KEY: ${{secrets.NASA_API_KEY}}
    # this job depends on the previous job (linting-unit)
    needs: linting-unit
    
    steps:
    # takes the code from the repo
    - uses: actions/checkout@v4

    # build the Docker image from the Dockerfile and call it mars-weather-report
    - name: build the Docker image
      run: docker build -t mars-weather-report .
    
    # run integration tests using pytest inside the container
    - name: run integration tests inside container
      run: docker run --rm mars-weather-report pytest tests/integration
